IN_RX_DATA	= 0
IN_STATUS	= 1
IN_TEMPERAT	= 2
IN_DIP_SWITCH	= 3
IN_CLK_CTR_LOW	= 5
IN_CLK_CTR_HIGH	= 6
MEMTOP	= 8192
OUT_TX_DATA	= 0
OUT_LEDS	= 2
OUT_INT_MASK	= 3
OUT_RESET_TIMER	= 4
OUT_START_CLK_CTR	= 5
OUT_STOP_CLK_CTR	= 6

   0000: F8 2000    MOVE #MEMTOP, RR
   0003: 4F         MOVE RR, SP
   0004: 77         EI 
   0005: 02 089B    JMP Cmain
   0008: 02 00E4    JMP Cinterrupt
mult_div:
   000B: 74         MD_STP 
   000C: 74         MD_STP 
   000D: 74         MD_STP 
   000E: 74         MD_STP 
   000F: 74         MD_STP 
   0010: 74         MD_STP 
   0011: 74         MD_STP 
   0012: 74         MD_STP 
   0013: 74         MD_STP 
   0014: 74         MD_STP 
   0015: 74         MD_STP 
   0016: 74         MD_STP 
   0017: 74         MD_STP 
   0018: 74         MD_STP 
   0019: 74         MD_STP 
   001A: 74         MD_STP 
   001B: 07         RET 
Cserial_in_buffer:
   001C: 00         .BYTE 0
   001D: 00         .BYTE 0
   001E: 00         .BYTE 0
   001F: 00         .BYTE 0
   0020: 00         .BYTE 0
   0021: 00         .BYTE 0
   0022: 00         .BYTE 0
   0023: 00         .BYTE 0
   0024: 00         .BYTE 0
   0025: 00         .BYTE 0
   0026: 00         .BYTE 0
   0027: 00         .BYTE 0
   0028: 00         .BYTE 0
   0029: 00         .BYTE 0
   002A: 00         .BYTE 0
   002B: 00         .BYTE 0
Cserial_in_get:
   002C: 00         .BYTE 0
Cserial_in_put:
   002D: 00         .BYTE 0
Cserial_in_length:
   002E: 00         .BYTE 0
Cserial_in_overflow:
   002F: 00         .BYTE 0
Crx_interrupt:
   0030: 2E 00      IN (IN_RX_DATA), RU
   0032: 0F         MOVE R, -(SP)
   0033: 4B 002E    MOVE (Cserial_in_length), RU
   0036: 29 10      SLO RR, #16
   0038: 04 005D    JMP RRZ, L2_else_1
   003B: 63 00      MOVE 0(SP), RS
   003D: 0F         MOVE R, -(SP)
   003E: 4B 002D    MOVE (Cserial_in_put), RU
   0041: F4 001C    ADD RR, #Cserial_in_buffer
   0044: 43         MOVE RR, LL
   0045: 0A         MOVE (SP)+, RU
   0046: 45         MOVE R, (LL)
   0047: 4B 002D    MOVE (Cserial_in_put), RU
   004A: A1         ADD RR, #1
   004B: 5B 002D    MOVE R, (Cserial_in_put)
   004E: 11 0F      AND RR, #15
   0050: 5B 002D    MOVE R, (Cserial_in_put)
   0053: 4B 002E    MOVE (Cserial_in_length), RU
   0056: A1         ADD RR, #1
   0057: 5B 002E    MOVE R, (Cserial_in_length)
   005A: 02 0063    JMP L2_endif_1
L2_else_1:
   005D: F8 00FF    MOVE #255, RR
   0060: 5B 002F    MOVE R, (Cserial_in_overflow)
L2_endif_1:
   0063: 2B 01      ADD SP, #1
   0065: 07         RET 
Cserial_out_buffer:
   0066: 00         .BYTE 0
   0067: 00         .BYTE 0
   0068: 00         .BYTE 0
   0069: 00         .BYTE 0
   006A: 00         .BYTE 0
   006B: 00         .BYTE 0
   006C: 00         .BYTE 0
   006D: 00         .BYTE 0
   006E: 00         .BYTE 0
   006F: 00         .BYTE 0
   0070: 00         .BYTE 0
   0071: 00         .BYTE 0
   0072: 00         .BYTE 0
   0073: 00         .BYTE 0
   0074: 00         .BYTE 0
   0075: 00         .BYTE 0
Cserial_out_get:
   0076: 00         .BYTE 0
Cserial_out_put:
   0077: 00         .BYTE 0
Cserial_out_length:
   0078: 00         .BYTE 0
Ctx_interrupt:
   0079: 4B 0078    MOVE (Cserial_out_length), RU
   007C: 04 009E    JMP RRZ, L3_else_2
   007F: 4B 0076    MOVE (Cserial_out_get), RU
   0082: F4 0066    ADD RR, #Cserial_out_buffer
   0085: 48         MOVE (RR), RU
   0086: 2F 00      OUT R, (OUT_TX_DATA)
   0088: 4B 0076    MOVE (Cserial_out_get), RU
   008B: A1         ADD RR, #1
   008C: 5B 0076    MOVE R, (Cserial_out_get)
   008F: 11 0F      AND RR, #15
   0091: 5B 0076    MOVE R, (Cserial_out_get)
   0094: 4B 0078    MOVE (Cserial_out_length), RU
   0097: B1         SUB RR, #1
   0098: 5B 0078    MOVE R, (Cserial_out_length)
   009B: 02 00A1    JMP L3_endif_2
L3_else_2:
   009E: C5         MOVE #5, RR
   009F: 2F 03      OUT R, (OUT_INT_MASK)
L3_endif_2:
   00A1: 07         RET 
Cmilliseconds:
   00A2: 0000       .WORD 0
Cseconds_low:
   00A4: 0000       .WORD 0
Cseconds_mid:
   00A6: 0000       .WORD 0
Cseconds_high:
   00A8: 0000       .WORD 0
Cseconds_changed:
   00AA: 00         .BYTE 0
Ctimer_interrupt:
   00AB: 2F 04      OUT R, (OUT_RESET_TIMER)
   00AD: 49 00A2    MOVE (Cmilliseconds), RR
   00B0: A1         ADD RR, #1
   00B1: 5A 00A2    MOVE RR, (Cmilliseconds)
   00B4: 16 03E8    SEQ RR, #1000
   00B7: 04 00E3    JMP RRZ, L4_endif_3
   00BA: C0         MOVE #0, RR
   00BB: 5A 00A2    MOVE RR, (Cmilliseconds)
   00BE: F8 00FF    MOVE #255, RR
   00C1: 5B 00AA    MOVE R, (Cseconds_changed)
   00C4: 49 00A4    MOVE (Cseconds_low), RR
   00C7: A1         ADD RR, #1
   00C8: 5A 00A4    MOVE RR, (Cseconds_low)
   00CB: 17 00      SEQ RR, #0
   00CD: 04 00E3    JMP RRZ, L4_endif_4
   00D0: 49 00A6    MOVE (Cseconds_mid), RR
   00D3: A1         ADD RR, #1
   00D4: 5A 00A6    MOVE RR, (Cseconds_mid)
   00D7: 17 00      SEQ RR, #0
   00D9: 04 00E3    JMP RRZ, L4_endif_5
   00DC: 49 00A8    MOVE (Cseconds_high), RR
   00DF: A1         ADD RR, #1
   00E0: 5A 00A8    MOVE RR, (Cseconds_high)
L4_endif_5:
L4_endif_4:
L4_endif_3:
   00E3: 07         RET 
Cinterrupt:
   00E4: 0E         MOVE RR, -(SP)
   00E5: 40         MOVE LL, RR
   00E6: 0E         MOVE RR, -(SP)
   00E7: 2E 01      IN (IN_STATUS), RU
   00E9: 11 10      AND RR, #16
   00EB: 04 00F1    JMP RRZ, L5_endif_6
   00EE: 05 0030    CALL Crx_interrupt
L5_endif_6:
   00F1: 2E 01      IN (IN_STATUS), RU
   00F3: 11 20      AND RR, #32
   00F5: 04 00FB    JMP RRZ, L5_endif_7
   00F8: 05 0079    CALL Ctx_interrupt
L5_endif_7:
   00FB: 2E 01      IN (IN_STATUS), RU
   00FD: 11 40      AND RR, #64
   00FF: 04 0105    JMP RRZ, L5_endif_8
   0102: 05 00AB    CALL Ctimer_interrupt
L5_endif_8:
   0105: 08         MOVE (SP)+, RR
   0106: 43         MOVE RR, LL
   0107: 08         MOVE (SP)+, RR
   0108: 78         RETI 
   0109: 07         RET 
Cstrlen:
   010A: 61 02      MOVE 2(SP), RR
   010C: 0E         MOVE RR, -(SP)
   010D: 02 0116    JMP L6_cont_9
L6_loop_9:
   0110: 61 04      MOVE 4(SP), RR
   0112: A1         ADD RR, #1
   0113: 5D 04      MOVE RR, 4(SP)
   0115: B1         SUB RR, #1
L6_cont_9:
   0116: 61 04      MOVE 4(SP), RR
   0118: 47         MOVE (RR), RS
   0119: 03 0110    JMP RRNZ, L6_loop_9
L6_brk_10:
   011C: 61 04      MOVE 4(SP), RR
   011E: 43         MOVE RR, LL
   011F: 61 00      MOVE 0(SP), RR
   0121: 59         SUB LL, RR
   0122: 2B 02      ADD SP, #2
   0124: 07         RET 
   0125: 2B 02      ADD SP, #2
   0127: 07         RET 
Cputchr:
L7_loop_11:
L7_cont_11:
   0128: 4B 0078    MOVE (Cserial_out_length), RU
   012B: 17 10      SEQ RR, #16
   012D: 03 0128    JMP RRNZ, L7_loop_11
L7_brk_12:
   0130: 63 02      MOVE 2(SP), RS
   0132: 0F         MOVE R, -(SP)
   0133: 4B 0077    MOVE (Cserial_out_put), RU
   0136: F4 0066    ADD RR, #Cserial_out_buffer
   0139: 43         MOVE RR, LL
   013A: 0A         MOVE (SP)+, RU
   013B: 45         MOVE R, (LL)
   013C: 4B 0077    MOVE (Cserial_out_put), RU
   013F: A1         ADD RR, #1
   0140: 5B 0077    MOVE R, (Cserial_out_put)
   0143: 11 0F      AND RR, #15
   0145: 5B 0077    MOVE R, (Cserial_out_put)
   0148: 79         DI 
   0149: 4B 0078    MOVE (Cserial_out_length), RU
   014C: A1         ADD RR, #1
   014D: 5B 0078    MOVE R, (Cserial_out_length)
   0150: 77         EI 
   0151: C7         MOVE #7, RR
   0152: 2F 03      OUT R, (OUT_INT_MASK)
   0154: C1         MOVE #1, RR
   0155: 07         RET 
Cprint_string:
   0156: 02 0166    JMP L8_cont_13
L8_loop_13:
   0159: 61 02      MOVE 2(SP), RR
   015B: A1         ADD RR, #1
   015C: 5D 02      MOVE RR, 2(SP)
   015E: B1         SUB RR, #1
   015F: 47         MOVE (RR), RS
   0160: 0F         MOVE R, -(SP)
   0161: 05 0128    CALL Cputchr
   0164: 2B 01      ADD SP, #1
L8_cont_13:
   0166: 61 02      MOVE 2(SP), RR
   0168: 47         MOVE (RR), RS
   0169: 03 0159    JMP RRNZ, L8_loop_13
L8_brk_14:
   016C: 07         RET 
Cprint_hex:
   016D: 61 04      MOVE 4(SP), RR
   016F: 22 1000    SHS RR, #4096
   0172: 04 018B    JMP RRZ, L9_endif_15
   0175: 61 04      MOVE 4(SP), RR
   0177: 53 0C      ASR RR, #12
   0179: 11 0F      AND RR, #15
   017B: 0E         MOVE RR, -(SP)
   017C: 61 08      MOVE 8(SP), RR
   017E: 0B         MOVE (SP)+, LL
   017F: 58         ADD LL, RR
   0180: 47         MOVE (RR), RS
   0181: 0F         MOVE R, -(SP)
   0182: 61 03      MOVE 3(SP), RR
   0184: A1         ADD RR, #1
   0185: 5D 03      MOVE RR, 3(SP)
   0187: B1         SUB RR, #1
   0188: 43         MOVE RR, LL
   0189: 09         MOVE (SP)+, RS
   018A: 45         MOVE R, (LL)
L9_endif_15:
   018B: 61 04      MOVE 4(SP), RR
   018D: 22 0100    SHS RR, #256
   0190: 04 01A9    JMP RRZ, L9_endif_16
   0193: 61 04      MOVE 4(SP), RR
   0195: 53 08      ASR RR, #8
   0197: 11 0F      AND RR, #15
   0199: 0E         MOVE RR, -(SP)
   019A: 61 08      MOVE 8(SP), RR
   019C: 0B         MOVE (SP)+, LL
   019D: 58         ADD LL, RR
   019E: 47         MOVE (RR), RS
   019F: 0F         MOVE R, -(SP)
   01A0: 61 03      MOVE 3(SP), RR
   01A2: A1         ADD RR, #1
   01A3: 5D 03      MOVE RR, 3(SP)
   01A5: B1         SUB RR, #1
   01A6: 43         MOVE RR, LL
   01A7: 09         MOVE (SP)+, RS
   01A8: 45         MOVE R, (LL)
L9_endif_16:
   01A9: 61 04      MOVE 4(SP), RR
   01AB: 23 10      SHS RR, #16
   01AD: 04 01C6    JMP RRZ, L9_endif_17
   01B0: 61 04      MOVE 4(SP), RR
   01B2: 53 04      ASR RR, #4
   01B4: 11 0F      AND RR, #15
   01B6: 0E         MOVE RR, -(SP)
   01B7: 61 08      MOVE 8(SP), RR
   01B9: 0B         MOVE (SP)+, LL
   01BA: 58         ADD LL, RR
   01BB: 47         MOVE (RR), RS
   01BC: 0F         MOVE R, -(SP)
   01BD: 61 03      MOVE 3(SP), RR
   01BF: A1         ADD RR, #1
   01C0: 5D 03      MOVE RR, 3(SP)
   01C2: B1         SUB RR, #1
   01C3: 43         MOVE RR, LL
   01C4: 09         MOVE (SP)+, RS
   01C5: 45         MOVE R, (LL)
L9_endif_17:
   01C6: 61 04      MOVE 4(SP), RR
   01C8: 11 0F      AND RR, #15
   01CA: 0E         MOVE RR, -(SP)
   01CB: 61 08      MOVE 8(SP), RR
   01CD: 0B         MOVE (SP)+, LL
   01CE: 58         ADD LL, RR
   01CF: 47         MOVE (RR), RS
   01D0: 0F         MOVE R, -(SP)
   01D1: 61 03      MOVE 3(SP), RR
   01D3: A1         ADD RR, #1
   01D4: 5D 03      MOVE RR, 3(SP)
   01D6: B1         SUB RR, #1
   01D7: 43         MOVE RR, LL
   01D8: 09         MOVE (SP)+, RS
   01D9: 45         MOVE R, (LL)
   01DA: C0         MOVE #0, RR
   01DB: 0F         MOVE R, -(SP)
   01DC: 61 03      MOVE 3(SP), RR
   01DE: 43         MOVE RR, LL
   01DF: 09         MOVE (SP)+, RS
   01E0: 45         MOVE R, (LL)
   01E1: 07         RET 
Cprint_unsigned:
   01E2: 61 04      MOVE 4(SP), RR
   01E4: 22 2710    SHS RR, #10000
   01E7: 04 0212    JMP RRZ, L10_endif_18
   01EA: 61 04      MOVE 4(SP), RR
   01EC: 43         MOVE RR, LL
   01ED: F8 2710    MOVE #10000, RR
   01F0: 79         DI 
   01F1: 73         DIV_IU 
   01F2: 05 000B    CALL mult_div
   01F5: 75         MD_FIN 
   01F6: 77         EI 
   01F7: F5 30      ADD RR, #48
   01F9: 0F         MOVE R, -(SP)
   01FA: 61 03      MOVE 3(SP), RR
   01FC: A1         ADD RR, #1
   01FD: 5D 03      MOVE RR, 3(SP)
   01FF: B1         SUB RR, #1
   0200: 43         MOVE RR, LL
   0201: 09         MOVE (SP)+, RS
   0202: 45         MOVE R, (LL)
   0203: 61 04      MOVE 4(SP), RR
   0205: 43         MOVE RR, LL
   0206: F8 2710    MOVE #10000, RR
   0209: 79         DI 
   020A: 73         DIV_IU 
   020B: 05 000B    CALL mult_div
   020E: 76         MOD_FIN 
   020F: 77         EI 
   0210: 5D 04      MOVE RR, 4(SP)
L10_endif_18:
   0212: 61 04      MOVE 4(SP), RR
   0214: 22 03E8    SHS RR, #1000
   0217: 04 0242    JMP RRZ, L10_endif_19
   021A: 61 04      MOVE 4(SP), RR
   021C: 43         MOVE RR, LL
   021D: F8 03E8    MOVE #1000, RR
   0220: 79         DI 
   0221: 73         DIV_IU 
   0222: 05 000B    CALL mult_div
   0225: 75         MD_FIN 
   0226: 77         EI 
   0227: F5 30      ADD RR, #48
   0229: 0F         MOVE R, -(SP)
   022A: 61 03      MOVE 3(SP), RR
   022C: A1         ADD RR, #1
   022D: 5D 03      MOVE RR, 3(SP)
   022F: B1         SUB RR, #1
   0230: 43         MOVE RR, LL
   0231: 09         MOVE (SP)+, RS
   0232: 45         MOVE R, (LL)
   0233: 61 04      MOVE 4(SP), RR
   0235: 43         MOVE RR, LL
   0236: F8 03E8    MOVE #1000, RR
   0239: 79         DI 
   023A: 73         DIV_IU 
   023B: 05 000B    CALL mult_div
   023E: 76         MOD_FIN 
   023F: 77         EI 
   0240: 5D 04      MOVE RR, 4(SP)
L10_endif_19:
   0242: 61 04      MOVE 4(SP), RR
   0244: 23 64      SHS RR, #100
   0246: 04 026F    JMP RRZ, L10_endif_20
   0249: 61 04      MOVE 4(SP), RR
   024B: 43         MOVE RR, LL
   024C: F9 64      MOVE #100, RR
   024E: 79         DI 
   024F: 73         DIV_IU 
   0250: 05 000B    CALL mult_div
   0253: 75         MD_FIN 
   0254: 77         EI 
   0255: F5 30      ADD RR, #48
   0257: 0F         MOVE R, -(SP)
   0258: 61 03      MOVE 3(SP), RR
   025A: A1         ADD RR, #1
   025B: 5D 03      MOVE RR, 3(SP)
   025D: B1         SUB RR, #1
   025E: 43         MOVE RR, LL
   025F: 09         MOVE (SP)+, RS
   0260: 45         MOVE R, (LL)
   0261: 61 04      MOVE 4(SP), RR
   0263: 43         MOVE RR, LL
   0264: F9 64      MOVE #100, RR
   0266: 79         DI 
   0267: 73         DIV_IU 
   0268: 05 000B    CALL mult_div
   026B: 76         MOD_FIN 
   026C: 77         EI 
   026D: 5D 04      MOVE RR, 4(SP)
L10_endif_20:
   026F: 61 04      MOVE 4(SP), RR
   0271: 23 0A      SHS RR, #10
   0273: 04 029C    JMP RRZ, L10_endif_21
   0276: 61 04      MOVE 4(SP), RR
   0278: 43         MOVE RR, LL
   0279: F9 0A      MOVE #10, RR
   027B: 79         DI 
   027C: 73         DIV_IU 
   027D: 05 000B    CALL mult_div
   0280: 75         MD_FIN 
   0281: 77         EI 
   0282: F5 30      ADD RR, #48
   0284: 0F         MOVE R, -(SP)
   0285: 61 03      MOVE 3(SP), RR
   0287: A1         ADD RR, #1
   0288: 5D 03      MOVE RR, 3(SP)
   028A: B1         SUB RR, #1
   028B: 43         MOVE RR, LL
   028C: 09         MOVE (SP)+, RS
   028D: 45         MOVE R, (LL)
   028E: 61 04      MOVE 4(SP), RR
   0290: 43         MOVE RR, LL
   0291: F9 0A      MOVE #10, RR
   0293: 79         DI 
   0294: 73         DIV_IU 
   0295: 05 000B    CALL mult_div
   0298: 76         MOD_FIN 
   0299: 77         EI 
   029A: 5D 04      MOVE RR, 4(SP)
L10_endif_21:
   029C: 61 04      MOVE 4(SP), RR
   029E: F5 30      ADD RR, #48
   02A0: 0F         MOVE R, -(SP)
   02A1: 61 03      MOVE 3(SP), RR
   02A3: A1         ADD RR, #1
   02A4: 5D 03      MOVE RR, 3(SP)
   02A6: B1         SUB RR, #1
   02A7: 43         MOVE RR, LL
   02A8: 09         MOVE (SP)+, RS
   02A9: 45         MOVE R, (LL)
   02AA: C0         MOVE #0, RR
   02AB: 0F         MOVE R, -(SP)
   02AC: 61 03      MOVE 3(SP), RR
   02AE: 43         MOVE RR, LL
   02AF: 09         MOVE (SP)+, RS
   02B0: 45         MOVE R, (LL)
   02B1: 07         RET 
Cprint_item:
   02B2: 2C         CLRW -(SP)
   02B3: 2C         CLRW -(SP)
   02B4: 2C         CLRW -(SP)
   02B5: 2C         CLRW -(SP)
   02B6: 61 0A      MOVE 10(SP), RR
   02B8: 0E         MOVE RR, -(SP)
   02B9: 05 010A    CALL Cstrlen
   02BC: 2B 02      ADD SP, #2
   02BE: 0E         MOVE RR, -(SP)
   02BF: 2C         CLRW -(SP)
   02C0: 2C         CLRW -(SP)
   02C1: 61 19      MOVE 25(SP), RR
   02C3: 43         MOVE RR, LL
   02C4: 61 04      MOVE 4(SP), RR
   02C6: 36         SGT LL, RR
   02C7: 04 02D2    JMP RRZ, L11_endif_22
   02CA: 61 19      MOVE 25(SP), RR
   02CC: 43         MOVE RR, LL
   02CD: 61 04      MOVE 4(SP), RR
   02CF: 59         SUB LL, RR
   02D0: 5D 06      MOVE RR, 6(SP)
L11_endif_22:
   02D2: 63 13      MOVE 19(SP), RS
   02D4: 04 02DA    JMP RRZ, L11_endif_23
   02D7: C1         MOVE #1, RR
   02D8: 5D 0A      MOVE RR, 10(SP)
L11_endif_23:
   02DA: 61 15      MOVE 21(SP), RR
   02DC: 04 02E3    JMP RRZ, L11_endif_25
   02DF: 63 12      MOVE 18(SP), RS
   02E1: 11 01      AND RR, #1
L11_endif_25:
   02E3: 04 02F0    JMP RRZ, L11_endif_24
   02E6: 61 15      MOVE 21(SP), RR
   02E8: 0E         MOVE RR, -(SP)
   02E9: 05 010A    CALL Cstrlen
   02EC: 2B 02      ADD SP, #2
   02EE: 5D 08      MOVE RR, 8(SP)
L11_endif_24:
   02F0: 61 0A      MOVE 10(SP), RR
   02F2: 43         MOVE RR, LL
   02F3: 61 08      MOVE 8(SP), RR
   02F5: 58         ADD LL, RR
   02F6: 43         MOVE RR, LL
   02F7: 61 06      MOVE 6(SP), RR
   02F9: 58         ADD LL, RR
   02FA: 43         MOVE RR, LL
   02FB: 61 04      MOVE 4(SP), RR
   02FD: 58         ADD LL, RR
   02FE: 5D 02      MOVE RR, 2(SP)
   0300: 63 12      MOVE 18(SP), RS
   0302: 3F         NOT RR
   0303: 11 02      AND RR, #2
   0305: 04 0326    JMP RRZ, L11_endif_26
   0308: 61 02      MOVE 2(SP), RR
   030A: 5D 00      MOVE RR, 0(SP)
   030C: 02 031D    JMP L11_tst_27
L11_loop_27:
   030F: 63 14      MOVE 20(SP), RS
   0311: 0F         MOVE R, -(SP)
   0312: 05 0128    CALL Cputchr
   0315: 2B 01      ADD SP, #1
L11_cont_27:
   0317: 61 00      MOVE 0(SP), RR
   0319: A1         ADD RR, #1
   031A: 5D 00      MOVE RR, 0(SP)
   031C: B1         SUB RR, #1
L11_tst_27:
   031D: 61 00      MOVE 0(SP), RR
   031F: 43         MOVE RR, LL
   0320: 61 17      MOVE 23(SP), RR
   0322: 38         SLT LL, RR
   0323: 03 030F    JMP RRNZ, L11_loop_27
L11_brk_28:
L11_endif_26:
   0326: 63 13      MOVE 19(SP), RS
   0328: 04 0333    JMP RRZ, L11_endif_29
   032B: 63 13      MOVE 19(SP), RS
   032D: 0F         MOVE R, -(SP)
   032E: 05 0128    CALL Cputchr
   0331: 2B 01      ADD SP, #1
L11_endif_29:
   0333: 61 15      MOVE 21(SP), RR
   0335: 04 0347    JMP RRZ, L11_endif_30
   0338: 63 12      MOVE 18(SP), RS
   033A: 11 01      AND RR, #1
   033C: 04 0347    JMP RRZ, L11_endif_31
   033F: 61 15      MOVE 21(SP), RR
   0341: 0E         MOVE RR, -(SP)
   0342: 05 0156    CALL Cprint_string
   0345: 2B 02      ADD SP, #2
L11_endif_31:
L11_endif_30:
   0347: C0         MOVE #0, RR
   0348: 5D 00      MOVE RR, 0(SP)
   034A: 02 035B    JMP L11_tst_32
L11_loop_32:
   034D: 63 1B      MOVE 27(SP), RS
   034F: 0F         MOVE R, -(SP)
   0350: 05 0128    CALL Cputchr
   0353: 2B 01      ADD SP, #1
L11_cont_32:
   0355: 61 00      MOVE 0(SP), RR
   0357: A1         ADD RR, #1
   0358: 5D 00      MOVE RR, 0(SP)
   035A: B1         SUB RR, #1
L11_tst_32:
   035B: 61 00      MOVE 0(SP), RR
   035D: 43         MOVE RR, LL
   035E: 61 06      MOVE 6(SP), RR
   0360: 38         SLT LL, RR
   0361: 03 034D    JMP RRNZ, L11_loop_32
L11_brk_33:
   0364: 61 10      MOVE 16(SP), RR
   0366: 0E         MOVE RR, -(SP)
   0367: 05 0156    CALL Cprint_string
   036A: 2B 02      ADD SP, #2
   036C: 63 12      MOVE 18(SP), RS
   036E: 11 02      AND RR, #2
   0370: 04 0391    JMP RRZ, L11_endif_34
   0373: 61 02      MOVE 2(SP), RR
   0375: 5D 00      MOVE RR, 0(SP)
   0377: 02 0388    JMP L11_tst_35
L11_loop_35:
   037A: 63 14      MOVE 20(SP), RS
   037C: 0F         MOVE R, -(SP)
   037D: 05 0128    CALL Cputchr
   0380: 2B 01      ADD SP, #1
L11_cont_35:
   0382: 61 00      MOVE 0(SP), RR
   0384: A1         ADD RR, #1
   0385: 5D 00      MOVE RR, 0(SP)
   0387: B1         SUB RR, #1
L11_tst_35:
   0388: 61 00      MOVE 0(SP), RR
   038A: 43         MOVE RR, LL
   038B: 61 17      MOVE 23(SP), RR
   038D: 38         SLT LL, RR
   038E: 03 037A    JMP RRNZ, L11_loop_35
L11_brk_36:
L11_endif_34:
   0391: 61 02      MOVE 2(SP), RR
   0393: 2B 0E      ADD SP, #14
   0395: 07         RET 
   0396: 2B 0E      ADD SP, #14
   0398: 07         RET 
Cprintf:
   0399: 6D 02      LEA 2(SP), RR
   039B: A2         ADD RR, #2
   039C: 0E         MOVE RR, -(SP)
   039D: 2C         CLRW -(SP)
   039E: 2D         CLRB -(SP)
   039F: 2D         CLRB -(SP)
   03A0: 2D         CLRB -(SP)
   03A1: 2D         CLRB -(SP)
   03A2: 2C         CLRW -(SP)
   03A3: 2C         CLRW -(SP)
   03A4: 2C         CLRW -(SP)
   03A5: 2C         CLRW -(SP)
   03A6: 2C         CLRW -(SP)
   03A7: 2C         CLRW -(SP)
   03A8: 2C         CLRW -(SP)
   03A9: 2C         CLRW -(SP)
   03AA: 2C         CLRW -(SP)
   03AB: 2C         CLRW -(SP)
   03AC: 02 06DE    JMP L12_cont_37
L12_loop_37:
   03AF: 63 17      MOVE 23(SP), RS
   03B1: 19 25      SNE RR, #37
   03B3: 04 03C6    JMP RRZ, L12_endif_39
   03B6: 63 17      MOVE 23(SP), RS
   03B8: 0F         MOVE R, -(SP)
   03B9: 05 0128    CALL Cputchr
   03BC: 2B 01      ADD SP, #1
   03BE: 67 18      MOVE 24(SP), LL
   03C0: 58         ADD LL, RR
   03C1: 5D 18      MOVE RR, 24(SP)
   03C3: 02 06DE    JMP L12_cont_37
L12_endif_39:
   03C6: C0         MOVE #0, RR
   03C7: 5F 16      MOVE R, 22(SP)
   03C9: C0         MOVE #0, RR
   03CA: 5F 15      MOVE R, 21(SP)
   03CC: F9 20      MOVE #32, RR
   03CE: 5F 14      MOVE R, 20(SP)
   03D0: C0         MOVE #0, RR
   03D1: 5D 10      MOVE RR, 16(SP)
   03D3: C0         MOVE #0, RR
   03D4: 5D 0E      MOVE RR, 14(SP)
   03D6: 6D 10      LEA 16(SP), RR
   03D8: 5D 0C      MOVE RR, 12(SP)
L12_loop_40:
   03DA: 61 1E      MOVE 30(SP), RR
   03DC: A1         ADD RR, #1
   03DD: 5D 1E      MOVE RR, 30(SP)
   03DF: B1         SUB RR, #1
   03E0: 47         MOVE (RR), RS
   03E1: 5F 17      MOVE R, 23(SP)
   03E3: 43         MOVE RR, LL
   03E4: FB 58      SEQ LL, #88
   03E6: 03 0459    JMP RRNZ, L12_case_42_0058
   03E9: FB 64      SEQ LL, #100
   03EB: 03 0493    JMP RRNZ, L12_case_42_0064
   03EE: FB 73      SEQ LL, #115
   03F0: 03 04DF    JMP RRNZ, L12_case_42_0073
   03F3: FB 75      SEQ LL, #117
   03F5: 03 050B    JMP RRNZ, L12_case_42_0075
   03F8: FB 78      SEQ LL, #120
   03FA: 03 0541    JMP RRNZ, L12_case_42_0078
   03FD: FB 63      SEQ LL, #99
   03FF: 03 057B    JMP RRNZ, L12_case_42_0063
   0402: FB 23      SEQ LL, #35
   0404: 03 0590    JMP RRNZ, L12_case_42_0023
   0407: FB 2D      SEQ LL, #45
   0409: 03 0599    JMP RRNZ, L12_case_42_002D
   040C: FB 20      SEQ LL, #32
   040E: 03 05A2    JMP RRNZ, L12_case_42_0020
   0411: FB 2B      SEQ LL, #43
   0413: 03 05AF    JMP RRNZ, L12_case_42_002B
   0416: FB 2E      SEQ LL, #46
   0418: 03 05B6    JMP RRNZ, L12_case_42_002E
   041B: FB 30      SEQ LL, #48
   041D: 03 05BD    JMP RRNZ, L12_case_42_0030
   0420: FB 31      SEQ LL, #49
   0422: 03 05E0    JMP RRNZ, L12_case_42_0031
   0425: FB 32      SEQ LL, #50
   0427: 03 05F7    JMP RRNZ, L12_case_42_0032
   042A: FB 33      SEQ LL, #51
   042C: 03 060E    JMP RRNZ, L12_case_42_0033
   042F: FB 34      SEQ LL, #52
   0431: 03 0625    JMP RRNZ, L12_case_42_0034
   0434: FB 35      SEQ LL, #53
   0436: 03 063C    JMP RRNZ, L12_case_42_0035
   0439: FB 36      SEQ LL, #54
   043B: 03 0653    JMP RRNZ, L12_case_42_0036
   043E: FB 37      SEQ LL, #55
   0440: 03 066A    JMP RRNZ, L12_case_42_0037
   0443: FB 38      SEQ LL, #56
   0445: 03 0681    JMP RRNZ, L12_case_42_0038
   0448: FB 39      SEQ LL, #57
   044A: 03 0698    JMP RRNZ, L12_case_42_0039
   044D: FB 2A      SEQ LL, #42
   044F: 03 06AF    JMP RRNZ, L12_case_42_002A
   0452: D0         SEQ LL, #0
   0453: 03 06BF    JMP RRNZ, L12_case_42_0000
   0456: 02 06C8    JMP L12_deflt_42
L12_case_42_0058:
   0459: F8 0A13    MOVE #Cstr_19, RR
   045C: 0E         MOVE RR, -(SP)
   045D: 61 1C      MOVE 28(SP), RR
   045F: A2         ADD RR, #2
   0460: 5D 1C      MOVE RR, 28(SP)
   0462: B2         SUB RR, #2
   0463: 46         MOVE (RR), RR
   0464: 0E         MOVE RR, -(SP)
   0465: 6D 04      LEA 4(SP), RR
   0467: 0E         MOVE RR, -(SP)
   0468: 05 016D    CALL Cprint_hex
   046B: 2B 06      ADD SP, #6
   046D: F9 30      MOVE #48, RR
   046F: 0F         MOVE R, -(SP)
   0470: 61 0F      MOVE 15(SP), RR
   0472: 0E         MOVE RR, -(SP)
   0473: 61 13      MOVE 19(SP), RR
   0475: 0E         MOVE RR, -(SP)
   0476: F8 0A24    MOVE #Cstr_20, RR
   0479: 0E         MOVE RR, -(SP)
   047A: 63 1B      MOVE 27(SP), RS
   047C: 0F         MOVE R, -(SP)
   047D: 63 1D      MOVE 29(SP), RS
   047F: 0F         MOVE R, -(SP)
   0480: 63 1F      MOVE 31(SP), RS
   0482: 0F         MOVE R, -(SP)
   0483: 6D 0A      LEA 10(SP), RR
   0485: 0E         MOVE RR, -(SP)
   0486: 05 02B2    CALL Cprint_item
   0489: 2B 0C      ADD SP, #12
   048B: 67 18      MOVE 24(SP), LL
   048D: 58         ADD LL, RR
   048E: 5D 18      MOVE RR, 24(SP)
   0490: 02 06D8    JMP L12_brk_42
L12_case_42_0064:
   0493: 61 1A      MOVE 26(SP), RR
   0495: 46         MOVE (RR), RR
   0496: 21 00      SLT RR, #0
   0498: 04 04A9    JMP RRZ, L12_endif_43
   049B: F9 2D      MOVE #45, RR
   049D: 5F 15      MOVE R, 21(SP)
   049F: 61 1A      MOVE 26(SP), RR
   04A1: 46         MOVE (RR), RR
   04A2: 3E         NEG RR
   04A3: 0E         MOVE RR, -(SP)
   04A4: 61 1C      MOVE 28(SP), RR
   04A6: 43         MOVE RR, LL
   04A7: 08         MOVE (SP)+, RR
   04A8: 44         MOVE RR, (LL)
L12_endif_43:
   04A9: 61 1A      MOVE 26(SP), RR
   04AB: A2         ADD RR, #2
   04AC: 5D 1A      MOVE RR, 26(SP)
   04AE: B2         SUB RR, #2
   04AF: 46         MOVE (RR), RR
   04B0: 0E         MOVE RR, -(SP)
   04B1: 6D 02      LEA 2(SP), RR
   04B3: 0E         MOVE RR, -(SP)
   04B4: 05 01E2    CALL Cprint_unsigned
   04B7: 2B 04      ADD SP, #4
   04B9: F9 30      MOVE #48, RR
   04BB: 0F         MOVE R, -(SP)
   04BC: 61 0F      MOVE 15(SP), RR
   04BE: 0E         MOVE RR, -(SP)
   04BF: 61 13      MOVE 19(SP), RR
   04C1: 0E         MOVE RR, -(SP)
   04C2: F8 0A27    MOVE #Cstr_21, RR
   04C5: 0E         MOVE RR, -(SP)
   04C6: 63 1B      MOVE 27(SP), RS
   04C8: 0F         MOVE R, -(SP)
   04C9: 63 1D      MOVE 29(SP), RS
   04CB: 0F         MOVE R, -(SP)
   04CC: 63 1F      MOVE 31(SP), RS
   04CE: 0F         MOVE R, -(SP)
   04CF: 6D 0A      LEA 10(SP), RR
   04D1: 0E         MOVE RR, -(SP)
   04D2: 05 02B2    CALL Cprint_item
   04D5: 2B 0C      ADD SP, #12
   04D7: 67 18      MOVE 24(SP), LL
   04D9: 58         ADD LL, RR
   04DA: 5D 18      MOVE RR, 24(SP)
   04DC: 02 06D8    JMP L12_brk_42
L12_case_42_0073:
   04DF: F9 20      MOVE #32, RR
   04E1: 0F         MOVE R, -(SP)
   04E2: 61 0F      MOVE 15(SP), RR
   04E4: 0E         MOVE RR, -(SP)
   04E5: 61 13      MOVE 19(SP), RR
   04E7: 0E         MOVE RR, -(SP)
   04E8: F8 0A28    MOVE #Cstr_22, RR
   04EB: 0E         MOVE RR, -(SP)
   04EC: F9 20      MOVE #32, RR
   04EE: 0F         MOVE R, -(SP)
   04EF: C0         MOVE #0, RR
   04F0: 0F         MOVE R, -(SP)
   04F1: 63 1F      MOVE 31(SP), RS
   04F3: 11 02      AND RR, #2
   04F5: 0F         MOVE R, -(SP)
   04F6: 61 24      MOVE 36(SP), RR
   04F8: A2         ADD RR, #2
   04F9: 5D 24      MOVE RR, 36(SP)
   04FB: B2         SUB RR, #2
   04FC: 46         MOVE (RR), RR
   04FD: 0E         MOVE RR, -(SP)
   04FE: 05 02B2    CALL Cprint_item
   0501: 2B 0C      ADD SP, #12
   0503: 67 18      MOVE 24(SP), LL
   0505: 58         ADD LL, RR
   0506: 5D 18      MOVE RR, 24(SP)
   0508: 02 06D8    JMP L12_brk_42
L12_case_42_0075:
   050B: 61 1A      MOVE 26(SP), RR
   050D: A2         ADD RR, #2
   050E: 5D 1A      MOVE RR, 26(SP)
   0510: B2         SUB RR, #2
   0511: 46         MOVE (RR), RR
   0512: 0E         MOVE RR, -(SP)
   0513: 6D 02      LEA 2(SP), RR
   0515: 0E         MOVE RR, -(SP)
   0516: 05 01E2    CALL Cprint_unsigned
   0519: 2B 04      ADD SP, #4
   051B: F9 30      MOVE #48, RR
   051D: 0F         MOVE R, -(SP)
   051E: 61 0F      MOVE 15(SP), RR
   0520: 0E         MOVE RR, -(SP)
   0521: 61 13      MOVE 19(SP), RR
   0523: 0E         MOVE RR, -(SP)
   0524: F8 0A29    MOVE #Cstr_23, RR
   0527: 0E         MOVE RR, -(SP)
   0528: 63 1B      MOVE 27(SP), RS
   052A: 0F         MOVE R, -(SP)
   052B: 63 1D      MOVE 29(SP), RS
   052D: 0F         MOVE R, -(SP)
   052E: 63 1F      MOVE 31(SP), RS
   0530: 0F         MOVE R, -(SP)
   0531: 6D 0A      LEA 10(SP), RR
   0533: 0E         MOVE RR, -(SP)
   0534: 05 02B2    CALL Cprint_item
   0537: 2B 0C      ADD SP, #12
   0539: 67 18      MOVE 24(SP), LL
   053B: 58         ADD LL, RR
   053C: 5D 18      MOVE RR, 24(SP)
   053E: 02 06D8    JMP L12_brk_42
L12_case_42_0078:
   0541: F8 0A2A    MOVE #Cstr_24, RR
   0544: 0E         MOVE RR, -(SP)
   0545: 61 1C      MOVE 28(SP), RR
   0547: A2         ADD RR, #2
   0548: 5D 1C      MOVE RR, 28(SP)
   054A: B2         SUB RR, #2
   054B: 46         MOVE (RR), RR
   054C: 0E         MOVE RR, -(SP)
   054D: 6D 04      LEA 4(SP), RR
   054F: 0E         MOVE RR, -(SP)
   0550: 05 016D    CALL Cprint_hex
   0553: 2B 06      ADD SP, #6
   0555: F9 30      MOVE #48, RR
   0557: 0F         MOVE R, -(SP)
   0558: 61 0F      MOVE 15(SP), RR
   055A: 0E         MOVE RR, -(SP)
   055B: 61 13      MOVE 19(SP), RR
   055D: 0E         MOVE RR, -(SP)
   055E: F8 0A3B    MOVE #Cstr_25, RR
   0561: 0E         MOVE RR, -(SP)
   0562: 63 1B      MOVE 27(SP), RS
   0564: 0F         MOVE R, -(SP)
   0565: 63 1D      MOVE 29(SP), RS
   0567: 0F         MOVE R, -(SP)
   0568: 63 1F      MOVE 31(SP), RS
   056A: 0F         MOVE R, -(SP)
   056B: 6D 0A      LEA 10(SP), RR
   056D: 0E         MOVE RR, -(SP)
   056E: 05 02B2    CALL Cprint_item
   0571: 2B 0C      ADD SP, #12
   0573: 67 18      MOVE 24(SP), LL
   0575: 58         ADD LL, RR
   0576: 5D 18      MOVE RR, 24(SP)
   0578: 02 06D8    JMP L12_brk_42
L12_case_42_0063:
   057B: 61 1A      MOVE 26(SP), RR
   057D: A2         ADD RR, #2
   057E: 5D 1A      MOVE RR, 26(SP)
   0580: B2         SUB RR, #2
   0581: 46         MOVE (RR), RR
   0582: 0F         MOVE R, -(SP)
   0583: 05 0128    CALL Cputchr
   0586: 2B 01      ADD SP, #1
   0588: 67 18      MOVE 24(SP), LL
   058A: 58         ADD LL, RR
   058B: 5D 18      MOVE RR, 24(SP)
   058D: 02 06D8    JMP L12_brk_42
L12_case_42_0023:
   0590: 63 16      MOVE 22(SP), RS
   0592: 13 01      OR RR, #1
   0594: 5F 16      MOVE R, 22(SP)
   0596: 02 06DB    JMP L12_cont_40
L12_case_42_002D:
   0599: 63 16      MOVE 22(SP), RS
   059B: 13 02      OR RR, #2
   059D: 5F 16      MOVE R, 22(SP)
   059F: 02 06DB    JMP L12_cont_40
L12_case_42_0020:
   05A2: 63 15      MOVE 21(SP), RS
   05A4: 3D         LNOT RR
   05A5: 04 05AC    JMP RRZ, L12_endif_44
   05A8: F9 20      MOVE #32, RR
   05AA: 5F 15      MOVE R, 21(SP)
L12_endif_44:
   05AC: 02 06DB    JMP L12_cont_40
L12_case_42_002B:
   05AF: F9 2B      MOVE #43, RR
   05B1: 5F 15      MOVE R, 21(SP)
   05B3: 02 06DB    JMP L12_cont_40
L12_case_42_002E:
   05B6: 6D 0E      LEA 14(SP), RR
   05B8: 5D 0C      MOVE RR, 12(SP)
   05BA: 02 06DB    JMP L12_cont_40
L12_case_42_0030:
   05BD: 61 0C      MOVE 12(SP), RR
   05BF: 46         MOVE (RR), RR
   05C0: 04 05D9    JMP RRZ, L12_else_45
   05C3: 61 0C      MOVE 12(SP), RR
   05C5: 46         MOVE (RR), RR
   05C6: 43         MOVE RR, LL
   05C7: F9 0A      MOVE #10, RR
   05C9: 79         DI 
   05CA: 71         MUL_IU 
   05CB: 05 000B    CALL mult_div
   05CE: 75         MD_FIN 
   05CF: 77         EI 
   05D0: 0E         MOVE RR, -(SP)
   05D1: 61 0E      MOVE 14(SP), RR
   05D3: 43         MOVE RR, LL
   05D4: 08         MOVE (SP)+, RR
   05D5: 44         MOVE RR, (LL)
   05D6: 02 05DD    JMP L12_endif_45
L12_else_45:
   05D9: F9 30      MOVE #48, RR
   05DB: 5F 14      MOVE R, 20(SP)
L12_endif_45:
   05DD: 02 06DB    JMP L12_cont_40
L12_case_42_0031:
   05E0: 61 0C      MOVE 12(SP), RR
   05E2: 46         MOVE (RR), RR
   05E3: 43         MOVE RR, LL
   05E4: F9 0A      MOVE #10, RR
   05E6: 79         DI 
   05E7: 71         MUL_IU 
   05E8: 05 000B    CALL mult_div
   05EB: 75         MD_FIN 
   05EC: 77         EI 
   05ED: A1         ADD RR, #1
   05EE: 0E         MOVE RR, -(SP)
   05EF: 61 0E      MOVE 14(SP), RR
   05F1: 43         MOVE RR, LL
   05F2: 08         MOVE (SP)+, RR
   05F3: 44         MOVE RR, (LL)
   05F4: 02 06DB    JMP L12_cont_40
L12_case_42_0032:
   05F7: 61 0C      MOVE 12(SP), RR
   05F9: 46         MOVE (RR), RR
   05FA: 43         MOVE RR, LL
   05FB: F9 0A      MOVE #10, RR
   05FD: 79         DI 
   05FE: 71         MUL_IU 
   05FF: 05 000B    CALL mult_div
   0602: 75         MD_FIN 
   0603: 77         EI 
   0604: A2         ADD RR, #2
   0605: 0E         MOVE RR, -(SP)
   0606: 61 0E      MOVE 14(SP), RR
   0608: 43         MOVE RR, LL
   0609: 08         MOVE (SP)+, RR
   060A: 44         MOVE RR, (LL)
   060B: 02 06DB    JMP L12_cont_40
L12_case_42_0033:
   060E: 61 0C      MOVE 12(SP), RR
   0610: 46         MOVE (RR), RR
   0611: 43         MOVE RR, LL
   0612: F9 0A      MOVE #10, RR
   0614: 79         DI 
   0615: 71         MUL_IU 
   0616: 05 000B    CALL mult_div
   0619: 75         MD_FIN 
   061A: 77         EI 
   061B: A3         ADD RR, #3
   061C: 0E         MOVE RR, -(SP)
   061D: 61 0E      MOVE 14(SP), RR
   061F: 43         MOVE RR, LL
   0620: 08         MOVE (SP)+, RR
   0621: 44         MOVE RR, (LL)
   0622: 02 06DB    JMP L12_cont_40
L12_case_42_0034:
   0625: 61 0C      MOVE 12(SP), RR
   0627: 46         MOVE (RR), RR
   0628: 43         MOVE RR, LL
   0629: F9 0A      MOVE #10, RR
   062B: 79         DI 
   062C: 71         MUL_IU 
   062D: 05 000B    CALL mult_div
   0630: 75         MD_FIN 
   0631: 77         EI 
   0632: A4         ADD RR, #4
   0633: 0E         MOVE RR, -(SP)
   0634: 61 0E      MOVE 14(SP), RR
   0636: 43         MOVE RR, LL
   0637: 08         MOVE (SP)+, RR
   0638: 44         MOVE RR, (LL)
   0639: 02 06DB    JMP L12_cont_40
L12_case_42_0035:
   063C: 61 0C      MOVE 12(SP), RR
   063E: 46         MOVE (RR), RR
   063F: 43         MOVE RR, LL
   0640: F9 0A      MOVE #10, RR
   0642: 79         DI 
   0643: 71         MUL_IU 
   0644: 05 000B    CALL mult_div
   0647: 75         MD_FIN 
   0648: 77         EI 
   0649: A5         ADD RR, #5
   064A: 0E         MOVE RR, -(SP)
   064B: 61 0E      MOVE 14(SP), RR
   064D: 43         MOVE RR, LL
   064E: 08         MOVE (SP)+, RR
   064F: 44         MOVE RR, (LL)
   0650: 02 06DB    JMP L12_cont_40
L12_case_42_0036:
   0653: 61 0C      MOVE 12(SP), RR
   0655: 46         MOVE (RR), RR
   0656: 43         MOVE RR, LL
   0657: F9 0A      MOVE #10, RR
   0659: 79         DI 
   065A: 71         MUL_IU 
   065B: 05 000B    CALL mult_div
   065E: 75         MD_FIN 
   065F: 77         EI 
   0660: A6         ADD RR, #6
   0661: 0E         MOVE RR, -(SP)
   0662: 61 0E      MOVE 14(SP), RR
   0664: 43         MOVE RR, LL
   0665: 08         MOVE (SP)+, RR
   0666: 44         MOVE RR, (LL)
   0667: 02 06DB    JMP L12_cont_40
L12_case_42_0037:
   066A: 61 0C      MOVE 12(SP), RR
   066C: 46         MOVE (RR), RR
   066D: 43         MOVE RR, LL
   066E: F9 0A      MOVE #10, RR
   0670: 79         DI 
   0671: 71         MUL_IU 
   0672: 05 000B    CALL mult_div
   0675: 75         MD_FIN 
   0676: 77         EI 
   0677: A7         ADD RR, #7
   0678: 0E         MOVE RR, -(SP)
   0679: 61 0E      MOVE 14(SP), RR
   067B: 43         MOVE RR, LL
   067C: 08         MOVE (SP)+, RR
   067D: 44         MOVE RR, (LL)
   067E: 02 06DB    JMP L12_cont_40
L12_case_42_0038:
   0681: 61 0C      MOVE 12(SP), RR
   0683: 46         MOVE (RR), RR
   0684: 43         MOVE RR, LL
   0685: F9 0A      MOVE #10, RR
   0687: 79         DI 
   0688: 71         MUL_IU 
   0689: 05 000B    CALL mult_div
   068C: 75         MD_FIN 
   068D: 77         EI 
   068E: A8         ADD RR, #8
   068F: 0E         MOVE RR, -(SP)
   0690: 61 0E      MOVE 14(SP), RR
   0692: 43         MOVE RR, LL
   0693: 08         MOVE (SP)+, RR
   0694: 44         MOVE RR, (LL)
   0695: 02 06DB    JMP L12_cont_40
L12_case_42_0039:
   0698: 61 0C      MOVE 12(SP), RR
   069A: 46         MOVE (RR), RR
   069B: 43         MOVE RR, LL
   069C: F9 0A      MOVE #10, RR
   069E: 79         DI 
   069F: 71         MUL_IU 
   06A0: 05 000B    CALL mult_div
   06A3: 75         MD_FIN 
   06A4: 77         EI 
   06A5: A9         ADD RR, #9
   06A6: 0E         MOVE RR, -(SP)
   06A7: 61 0E      MOVE 14(SP), RR
   06A9: 43         MOVE RR, LL
   06AA: 08         MOVE (SP)+, RR
   06AB: 44         MOVE RR, (LL)
   06AC: 02 06DB    JMP L12_cont_40
L12_case_42_002A:
   06AF: 61 1A      MOVE 26(SP), RR
   06B1: A2         ADD RR, #2
   06B2: 5D 1A      MOVE RR, 26(SP)
   06B4: B2         SUB RR, #2
   06B5: 46         MOVE (RR), RR
   06B6: 0E         MOVE RR, -(SP)
   06B7: 61 0E      MOVE 14(SP), RR
   06B9: 43         MOVE RR, LL
   06BA: 08         MOVE (SP)+, RR
   06BB: 44         MOVE RR, (LL)
   06BC: 02 06DB    JMP L12_cont_40
L12_case_42_0000:
   06BF: 61 1E      MOVE 30(SP), RR
   06C1: B1         SUB RR, #1
   06C2: 5D 1E      MOVE RR, 30(SP)
   06C4: A1         ADD RR, #1
   06C5: 02 06D8    JMP L12_brk_42
L12_deflt_42:
   06C8: 63 17      MOVE 23(SP), RS
   06CA: 0F         MOVE R, -(SP)
   06CB: 05 0128    CALL Cputchr
   06CE: 2B 01      ADD SP, #1
   06D0: 67 18      MOVE 24(SP), LL
   06D2: 58         ADD LL, RR
   06D3: 5D 18      MOVE RR, 24(SP)
   06D5: 02 06D8    JMP L12_brk_42
L12_brk_42:
   06D8: 02 06DE    JMP L12_brk_41
L12_cont_40:
   06DB: 02 03DA    JMP L12_loop_40
L12_brk_41:
L12_cont_37:
   06DE: 61 1E      MOVE 30(SP), RR
   06E0: A1         ADD RR, #1
   06E1: 5D 1E      MOVE RR, 30(SP)
   06E3: B1         SUB RR, #1
   06E4: 47         MOVE (RR), RS
   06E5: 5F 17      MOVE R, 23(SP)
   06E7: 03 03AF    JMP RRNZ, L12_loop_37
L12_brk_38:
   06EA: 61 18      MOVE 24(SP), RR
   06EC: 2B 1C      ADD SP, #28
   06EE: 07         RET 
   06EF: 2B 1C      ADD SP, #28
   06F1: 07         RET 
Cgetchr:
   06F2: 2D         CLRB -(SP)
L13_loop_46:
L13_cont_46:
   06F3: 4B 002E    MOVE (Cserial_in_length), RU
   06F6: 3D         LNOT RR
   06F7: 03 06F3    JMP RRNZ, L13_loop_46
L13_brk_47:
   06FA: 4B 002C    MOVE (Cserial_in_get), RU
   06FD: F4 001C    ADD RR, #Cserial_in_buffer
   0700: 48         MOVE (RR), RU
   0701: 5F 00      MOVE R, 0(SP)
   0703: 4B 002C    MOVE (Cserial_in_get), RU
   0706: A1         ADD RR, #1
   0707: 5B 002C    MOVE R, (Cserial_in_get)
   070A: 11 0F      AND RR, #15
   070C: 5B 002C    MOVE R, (Cserial_in_get)
   070F: 79         DI 
   0710: 4B 002E    MOVE (Cserial_in_length), RU
   0713: B1         SUB RR, #1
   0714: 5B 002E    MOVE R, (Cserial_in_length)
   0717: 77         EI 
   0718: 63 00      MOVE 0(SP), RS
   071A: 2B 01      ADD SP, #1
   071C: 07         RET 
   071D: 2B 01      ADD SP, #1
   071F: 07         RET 
Cpeekchr:
L14_loop_48:
L14_cont_48:
   0720: 4B 002E    MOVE (Cserial_in_length), RU
   0723: 3D         LNOT RR
   0724: 03 0720    JMP RRNZ, L14_loop_48
L14_brk_49:
   0727: 4B 002C    MOVE (Cserial_in_get), RU
   072A: F4 001C    ADD RR, #Cserial_in_buffer
   072D: 48         MOVE (RR), RU
   072E: 07         RET 
   072F: 07         RET 
Cgetnibble:
   0730: 05 0720    CALL Cpeekchr
   0733: 0F         MOVE R, -(SP)
   0734: F8 FFFF    MOVE #65535, RR
   0737: 0E         MOVE RR, -(SP)
   0738: 63 02      MOVE 2(SP), RS
   073A: 1B 30      SGE RR, #48
   073C: 04 0743    JMP RRZ, L15_endif_51
   073F: 63 02      MOVE 2(SP), RS
   0741: 1F 39      SLE RR, #57
L15_endif_51:
   0743: 04 074F    JMP RRZ, L15_else_50
   0746: 63 02      MOVE 2(SP), RS
   0748: F7 30      SUB RR, #48
   074A: 5D 00      MOVE RR, 0(SP)
   074C: 02 077A    JMP L15_endif_50
L15_else_50:
   074F: 63 02      MOVE 2(SP), RS
   0751: 1B 41      SGE RR, #65
   0753: 04 075A    JMP RRZ, L15_endif_53
   0756: 63 02      MOVE 2(SP), RS
   0758: 1F 46      SLE RR, #70
L15_endif_53:
   075A: 04 0766    JMP RRZ, L15_else_52
   075D: 63 02      MOVE 2(SP), RS
   075F: F7 37      SUB RR, #55
   0761: 5D 00      MOVE RR, 0(SP)
   0763: 02 077A    JMP L15_endif_52
L15_else_52:
   0766: 63 02      MOVE 2(SP), RS
   0768: 1B 61      SGE RR, #97
   076A: 04 0771    JMP RRZ, L15_endif_55
   076D: 63 02      MOVE 2(SP), RS
   076F: 1F 66      SLE RR, #102
L15_endif_55:
   0771: 04 077A    JMP RRZ, L15_endif_54
   0774: 63 02      MOVE 2(SP), RS
   0776: F7 57      SUB RR, #87
   0778: 5D 00      MOVE RR, 0(SP)
L15_endif_54:
L15_endif_52:
L15_endif_50:
   077A: 61 00      MOVE 0(SP), RR
   077C: 18 FFFF    SNE RR, #65535
   077F: 04 0792    JMP RRZ, L15_endif_56
   0782: 05 06F2    CALL Cgetchr
   0785: 63 05      MOVE 5(SP), RS
   0787: 04 0792    JMP RRZ, L15_endif_57
   078A: 63 02      MOVE 2(SP), RS
   078C: 0F         MOVE R, -(SP)
   078D: 05 0128    CALL Cputchr
   0790: 2B 01      ADD SP, #1
L15_endif_57:
L15_endif_56:
   0792: 61 00      MOVE 0(SP), RR
   0794: 2B 03      ADD SP, #3
   0796: 07         RET 
   0797: 2B 03      ADD SP, #3
   0799: 07         RET 
Cgethex:
   079A: 2C         CLRW -(SP)
   079B: 2D         CLRB -(SP)
   079C: 02 07A9    JMP L16_cont_58
L16_loop_58:
   079F: 61 01      MOVE 1(SP), RR
   07A1: 52 04      LSL RR, #4
   07A3: 43         MOVE RR, LL
   07A4: 63 00      MOVE 0(SP), RS
   07A6: 31         OR LL, RR
   07A7: 5D 01      MOVE RR, 1(SP)
L16_cont_58:
   07A9: 63 05      MOVE 5(SP), RS
   07AB: 0F         MOVE R, -(SP)
   07AC: 05 0730    CALL Cgetnibble
   07AF: 2B 01      ADD SP, #1
   07B1: 5F 00      MOVE R, 0(SP)
   07B3: 18 FFFF    SNE RR, #65535
   07B6: 03 079F    JMP RRNZ, L16_loop_58
L16_brk_59:
   07B9: 61 01      MOVE 1(SP), RR
   07BB: 2B 03      ADD SP, #3
   07BD: 07         RET 
   07BE: 2B 03      ADD SP, #3
   07C0: 07         RET 
Cshow_time:
   07C1: 2C         CLRW -(SP)
   07C2: 2C         CLRW -(SP)
   07C3: 2C         CLRW -(SP)
L17_loop_60:
   07C4: C0         MOVE #0, RR
   07C5: 5B 00AA    MOVE R, (Cseconds_changed)
   07C8: 49 00A4    MOVE (Cseconds_low), RR
   07CB: 5D 04      MOVE RR, 4(SP)
   07CD: 49 00A6    MOVE (Cseconds_mid), RR
   07D0: 5D 02      MOVE RR, 2(SP)
   07D2: 49 00A8    MOVE (Cseconds_high), RR
   07D5: 5D 00      MOVE RR, 0(SP)
L17_cont_60:
   07D7: 4B 00AA    MOVE (Cseconds_changed), RU
   07DA: 03 07C4    JMP RRNZ, L17_loop_60
L17_brk_61:
   07DD: 61 04      MOVE 4(SP), RR
   07DF: 0E         MOVE RR, -(SP)
   07E0: 61 04      MOVE 4(SP), RR
   07E2: 0E         MOVE RR, -(SP)
   07E3: 61 04      MOVE 4(SP), RR
   07E5: 0E         MOVE RR, -(SP)
   07E6: F8 0A3E    MOVE #Cstr_28, RR
   07E9: 0E         MOVE RR, -(SP)
   07EA: 05 0399    CALL Cprintf
   07ED: 2B 08      ADD SP, #8
   07EF: 2B 06      ADD SP, #6
   07F1: 07         RET 
Cdisplay_memory:
   07F2: 2D         CLRB -(SP)
   07F3: 2C         CLRW -(SP)
   07F4: 2C         CLRW -(SP)
   07F5: C0         MOVE #0, RR
   07F6: 5D 02      MOVE RR, 2(SP)
   07F8: 02 0891    JMP L18_tst_62
L18_loop_62:
   07FB: 61 07      MOVE 7(SP), RR
   07FD: 0E         MOVE RR, -(SP)
   07FE: F8 0A62    MOVE #Cstr_29, RR
   0801: 0E         MOVE RR, -(SP)
   0802: 05 0399    CALL Cprintf
   0805: 2B 04      ADD SP, #4
   0807: C0         MOVE #0, RR
   0808: 5D 00      MOVE RR, 0(SP)
   080A: 02 0824    JMP L18_tst_64
L18_loop_64:
   080D: 61 07      MOVE 7(SP), RR
   080F: A1         ADD RR, #1
   0810: 5D 07      MOVE RR, 7(SP)
   0812: B1         SUB RR, #1
   0813: 48         MOVE (RR), RU
   0814: 0E         MOVE RR, -(SP)
   0815: F8 0A69    MOVE #Cstr_30, RR
   0818: 0E         MOVE RR, -(SP)
   0819: 05 0399    CALL Cprintf
   081C: 2B 04      ADD SP, #4
L18_cont_64:
   081E: 61 00      MOVE 0(SP), RR
   0820: A1         ADD RR, #1
   0821: 5D 00      MOVE RR, 0(SP)
   0823: B1         SUB RR, #1
L18_tst_64:
   0824: 61 00      MOVE 0(SP), RR
   0826: 21 10      SLT RR, #16
   0828: 03 080D    JMP RRNZ, L18_loop_64
L18_brk_65:
   082B: 61 07      MOVE 7(SP), RR
   082D: F7 10      SUB RR, #16
   082F: 5D 07      MOVE RR, 7(SP)
   0831: F8 0A70    MOVE #Cstr_31, RR
   0834: 0E         MOVE RR, -(SP)
   0835: 05 0399    CALL Cprintf
   0838: 2B 02      ADD SP, #2
   083A: C0         MOVE #0, RR
   083B: 5D 00      MOVE RR, 0(SP)
   083D: 02 087B    JMP L18_tst_66
L18_loop_66:
   0840: 61 07      MOVE 7(SP), RR
   0842: A1         ADD RR, #1
   0843: 5D 07      MOVE RR, 7(SP)
   0845: B1         SUB RR, #1
   0846: 48         MOVE (RR), RU
   0847: 5F 04      MOVE R, 4(SP)
   0849: 63 04      MOVE 4(SP), RS
   084B: 21 20      SLT RR, #32
   084D: 04 085B    JMP RRZ, L18_else_68
   0850: F9 2E      MOVE #46, RR
   0852: 0F         MOVE R, -(SP)
   0853: 05 0128    CALL Cputchr
   0856: 2B 01      ADD SP, #1
   0858: 02 0875    JMP L18_endif_68
L18_else_68:
   085B: 63 04      MOVE 4(SP), RS
   085D: 21 7F      SLT RR, #127
   085F: 04 086D    JMP RRZ, L18_else_69
   0862: 63 04      MOVE 4(SP), RS
   0864: 0F         MOVE R, -(SP)
   0865: 05 0128    CALL Cputchr
   0868: 2B 01      ADD SP, #1
   086A: 02 0875    JMP L18_endif_69
L18_else_69:
   086D: F9 2E      MOVE #46, RR
   086F: 0F         MOVE R, -(SP)
   0870: 05 0128    CALL Cputchr
   0873: 2B 01      ADD SP, #1
L18_endif_69:
L18_endif_68:
L18_cont_66:
   0875: 61 00      MOVE 0(SP), RR
   0877: A1         ADD RR, #1
   0878: 5D 00      MOVE RR, 0(SP)
   087A: B1         SUB RR, #1
L18_tst_66:
   087B: 61 00      MOVE 0(SP), RR
   087D: 21 10      SLT RR, #16
   087F: 03 0840    JMP RRNZ, L18_loop_66
L18_brk_67:
   0882: F8 0A74    MOVE #Cstr_32, RR
   0885: 0E         MOVE RR, -(SP)
   0886: 05 0399    CALL Cprintf
   0889: 2B 02      ADD SP, #2
L18_cont_62:
   088B: 61 02      MOVE 2(SP), RR
   088D: A1         ADD RR, #1
   088E: 5D 02      MOVE RR, 2(SP)
   0890: B1         SUB RR, #1
L18_tst_62:
   0891: 61 02      MOVE 2(SP), RR
   0893: 21 10      SLT RR, #16
   0895: 03 07FB    JMP RRNZ, L18_loop_62
L18_brk_63:
   0898: 2B 05      ADD SP, #5
   089A: 07         RET 
Cmain:
   089B: 2D         CLRB -(SP)
   089C: 2D         CLRB -(SP)
   089D: 2D         CLRB -(SP)
   089E: 2C         CLRW -(SP)
   089F: C5         MOVE #5, RR
   08A0: 2F 03      OUT R, (OUT_INT_MASK)
L19_loop_70:
   08A2: 63 04      MOVE 4(SP), RS
   08A4: 5F 02      MOVE R, 2(SP)
   08A6: 63 03      MOVE 3(SP), RS
   08A8: 3D         LNOT RR
   08A9: 04 08B5    JMP RRZ, L19_endif_72
   08AC: F8 0A77    MOVE #Cstr_35, RR
   08AF: 0E         MOVE RR, -(SP)
   08B0: 05 0399    CALL Cprintf
   08B3: 2B 02      ADD SP, #2
L19_endif_72:
   08B5: C0         MOVE #0, RR
   08B6: 5F 03      MOVE R, 3(SP)
   08B8: 05 06F2    CALL Cgetchr
   08BB: 5F 04      MOVE R, 4(SP)
   08BD: 43         MOVE RR, LL
   08BE: FB 0D      SEQ LL, #13
   08C0: 03 091B    JMP RRNZ, L19_case_73_000D
   08C3: FB 0A      SEQ LL, #10
   08C5: 03 091B    JMP RRNZ, L19_case_73_000A
   08C8: FB 43      SEQ LL, #67
   08CA: 03 0944    JMP RRNZ, L19_case_73_0043
   08CD: FB 63      SEQ LL, #99
   08CF: 03 0944    JMP RRNZ, L19_case_73_0063
   08D2: FB 44      SEQ LL, #68
   08D4: 03 094A    JMP RRNZ, L19_case_73_0044
   08D7: FB 64      SEQ LL, #100
   08D9: 03 094A    JMP RRNZ, L19_case_73_0064
   08DC: FB 45      SEQ LL, #69
   08DE: 03 0977    JMP RRNZ, L19_case_73_0045
   08E1: FB 65      SEQ LL, #101
   08E3: 03 0977    JMP RRNZ, L19_case_73_0065
   08E6: FB 4D      SEQ LL, #77
   08E8: 03 0998    JMP RRNZ, L19_case_73_004D
   08EB: FB 6D      SEQ LL, #109
   08ED: 03 0998    JMP RRNZ, L19_case_73_006D
   08F0: FB 53      SEQ LL, #83
   08F2: 03 09D2    JMP RRNZ, L19_case_73_0053
   08F5: FB 73      SEQ LL, #115
   08F7: 03 09D2    JMP RRNZ, L19_case_73_0073
   08FA: FB 54      SEQ LL, #84
   08FC: 03 09E1    JMP RRNZ, L19_case_73_0054
   08FF: FB 74      SEQ LL, #116
   0901: 03 09E1    JMP RRNZ, L19_case_73_0074
   0904: FB 51      SEQ LL, #81
   0906: 03 09F0    JMP RRNZ, L19_case_73_0051
   0909: FB 71      SEQ LL, #113
   090B: 03 09F0    JMP RRNZ, L19_case_73_0071
   090E: FB 58      SEQ LL, #88
   0910: 03 09F0    JMP RRNZ, L19_case_73_0058
   0913: FB 78      SEQ LL, #120
   0915: 03 09F0    JMP RRNZ, L19_case_73_0078
   0918: 02 0A04    JMP L19_deflt_73
L19_case_73_000D:
L19_case_73_000A:
   091B: 63 02      MOVE 2(SP), RS
   091D: 17 64      SEQ RR, #100
   091F: 04 093E    JMP RRZ, L19_endif_74
   0922: 61 00      MOVE 0(SP), RR
   0924: F4 0100    ADD RR, #256
   0927: 5D 00      MOVE RR, 0(SP)
   0929: F8 0A7B    MOVE #Cstr_36, RR
   092C: 0E         MOVE RR, -(SP)
   092D: 05 0399    CALL Cprintf
   0930: 2B 02      ADD SP, #2
   0932: 61 00      MOVE 0(SP), RR
   0934: 0E         MOVE RR, -(SP)
   0935: 05 07F2    CALL Cdisplay_memory
   0938: 2B 02      ADD SP, #2
   093A: F9 64      MOVE #100, RR
   093C: 5F 04      MOVE R, 4(SP)
L19_endif_74:
   093E: C1         MOVE #1, RR
   093F: 5F 03      MOVE R, 3(SP)
   0941: 02 0A0D    JMP L19_brk_73
L19_case_73_0043:
L19_case_73_0063:
   0944: 05 07C1    CALL Cshow_time
   0947: 02 0A0D    JMP L19_brk_73
L19_case_73_0044:
L19_case_73_0064:
   094A: F9 64      MOVE #100, RR
   094C: 5F 02      MOVE R, 2(SP)
   094E: F8 0A80    MOVE #Cstr_37, RR
   0951: 0E         MOVE RR, -(SP)
   0952: 05 0399    CALL Cprintf
   0955: 2B 02      ADD SP, #2
   0957: C1         MOVE #1, RR
   0958: 0F         MOVE R, -(SP)
   0959: 05 079A    CALL Cgethex
   095C: 2B 01      ADD SP, #1
   095E: 5D 00      MOVE RR, 0(SP)
   0960: F8 0A89    MOVE #Cstr_38, RR
   0963: 0E         MOVE RR, -(SP)
   0964: 05 0399    CALL Cprintf
   0967: 2B 02      ADD SP, #2
   0969: 05 06F2    CALL Cgetchr
   096C: 61 00      MOVE 0(SP), RR
   096E: 0E         MOVE RR, -(SP)
   096F: 05 07F2    CALL Cdisplay_memory
   0972: 2B 02      ADD SP, #2
   0974: 02 0A0D    JMP L19_brk_73
L19_case_73_0045:
L19_case_73_0065:
   0977: F8 0A8C    MOVE #Cstr_39, RR
   097A: 0E         MOVE RR, -(SP)
   097B: 05 0399    CALL Cprintf
   097E: 2B 02      ADD SP, #2
   0980: C1         MOVE #1, RR
   0981: 0F         MOVE R, -(SP)
   0982: 05 079A    CALL Cgethex
   0985: 2B 01      ADD SP, #1
   0987: 2F 02      OUT R, (OUT_LEDS)
   0989: F8 0A92    MOVE #Cstr_41, RR
   098C: 0E         MOVE RR, -(SP)
   098D: 05 0399    CALL Cprintf
   0990: 2B 02      ADD SP, #2
   0992: 05 06F2    CALL Cgetchr
   0995: 02 0A0D    JMP L19_brk_73
L19_case_73_004D:
L19_case_73_006D:
   0998: F8 0A95    MOVE #Cstr_42, RR
   099B: 0E         MOVE RR, -(SP)
   099C: 05 0399    CALL Cprintf
   099F: 2B 02      ADD SP, #2
   09A1: C1         MOVE #1, RR
   09A2: 0F         MOVE R, -(SP)
   09A3: 05 079A    CALL Cgethex
   09A6: 2B 01      ADD SP, #1
   09A8: 5D 00      MOVE RR, 0(SP)
   09AA: F8 0A9D    MOVE #Cstr_43, RR
   09AD: 0E         MOVE RR, -(SP)
   09AE: 05 0399    CALL Cprintf
   09B1: 2B 02      ADD SP, #2
   09B3: 05 06F2    CALL Cgetchr
   09B6: C1         MOVE #1, RR
   09B7: 0F         MOVE R, -(SP)
   09B8: 05 079A    CALL Cgethex
   09BB: 2B 01      ADD SP, #1
   09BD: 0F         MOVE R, -(SP)
   09BE: 61 01      MOVE 1(SP), RR
   09C0: 43         MOVE RR, LL
   09C1: 0A         MOVE (SP)+, RU
   09C2: 45         MOVE R, (LL)
   09C3: 05 06F2    CALL Cgetchr
   09C6: F8 0AA5    MOVE #Cstr_44, RR
   09C9: 0E         MOVE RR, -(SP)
   09CA: 05 0399    CALL Cprintf
   09CD: 2B 02      ADD SP, #2
   09CF: 02 0A0D    JMP L19_brk_73
L19_case_73_0053:
L19_case_73_0073:
   09D2: 2E 03      IN (IN_DIP_SWITCH), RU
   09D4: 0E         MOVE RR, -(SP)
   09D5: F8 0AA8    MOVE #Cstr_45, RR
   09D8: 0E         MOVE RR, -(SP)
   09D9: 05 0399    CALL Cprintf
   09DC: 2B 04      ADD SP, #4
   09DE: 02 0A0D    JMP L19_brk_73
L19_case_73_0054:
L19_case_73_0074:
   09E1: 2E 02      IN (IN_TEMPERAT), RU
   09E3: 0E         MOVE RR, -(SP)
   09E4: F8 0ABD    MOVE #Cstr_47, RR
   09E7: 0E         MOVE RR, -(SP)
   09E8: 05 0399    CALL Cprintf
   09EB: 2B 04      ADD SP, #4
   09ED: 02 0A0D    JMP L19_brk_73
L19_case_73_0051:
L19_case_73_0071:
L19_case_73_0058:
L19_case_73_0078:
   09F0: F8 0AE1    MOVE #Cstr_49, RR
   09F3: 0E         MOVE RR, -(SP)
   09F4: 05 0399    CALL Cprintf
   09F7: 2B 02      ADD SP, #2
L19_loop_75:
L19_cont_75:
   09F9: 4B 0078    MOVE (Cserial_out_length), RU
   09FC: 03 09F9    JMP RRNZ, L19_loop_75
L19_brk_76:
   09FF: 79         DI 
   0A00: 00         HALT 
   0A01: 02 0A0D    JMP L19_brk_73
L19_deflt_73:
   0A04: F8 0AEB    MOVE #Cstr_52, RR
   0A07: 0E         MOVE RR, -(SP)
   0A08: 05 0399    CALL Cprintf
   0A0B: 2B 02      ADD SP, #2
L19_brk_73:
L19_cont_70:
   0A0D: 02 08A2    JMP L19_loop_70
L19_brk_71:
   0A10: 2B 05      ADD SP, #5
   0A12: 07         RET 
Cstr_19:
   0A13: 30         .BYTE 48
   0A14: 31         .BYTE 49
   0A15: 32         .BYTE 50
   0A16: 33         .BYTE 51
   0A17: 34         .BYTE 52
   0A18: 35         .BYTE 53
   0A19: 36         .BYTE 54
   0A1A: 37         .BYTE 55
   0A1B: 38         .BYTE 56
   0A1C: 39         .BYTE 57
   0A1D: 41         .BYTE 65
   0A1E: 42         .BYTE 66
   0A1F: 43         .BYTE 67
   0A20: 44         .BYTE 68
   0A21: 45         .BYTE 69
   0A22: 46         .BYTE 70
   0A23: 00         .BYTE 0
Cstr_20:
   0A24: 30         .BYTE 48
   0A25: 58         .BYTE 88
   0A26: 00         .BYTE 0
Cstr_21:
   0A27: 00         .BYTE 0
Cstr_22:
   0A28: 00         .BYTE 0
Cstr_23:
   0A29: 00         .BYTE 0
Cstr_24:
   0A2A: 30         .BYTE 48
   0A2B: 31         .BYTE 49
   0A2C: 32         .BYTE 50
   0A2D: 33         .BYTE 51
   0A2E: 34         .BYTE 52
   0A2F: 35         .BYTE 53
   0A30: 36         .BYTE 54
   0A31: 37         .BYTE 55
   0A32: 38         .BYTE 56
   0A33: 39         .BYTE 57
   0A34: 61         .BYTE 97
   0A35: 62         .BYTE 98
   0A36: 63         .BYTE 99
   0A37: 64         .BYTE 100
   0A38: 65         .BYTE 101
   0A39: 66         .BYTE 102
   0A3A: 00         .BYTE 0
Cstr_25:
   0A3B: 30         .BYTE 48
   0A3C: 78         .BYTE 120
   0A3D: 00         .BYTE 0
Cstr_28:
   0A3E: 55         .BYTE 85
   0A3F: 70         .BYTE 112
   0A40: 74         .BYTE 116
   0A41: 69         .BYTE 105
   0A42: 6D         .BYTE 109
   0A43: 65         .BYTE 101
   0A44: 20         .BYTE 32
   0A45: 69         .BYTE 105
   0A46: 73         .BYTE 115
   0A47: 20         .BYTE 32
   0A48: 25         .BYTE 37
   0A49: 34         .BYTE 52
   0A4A: 2E         .BYTE 46
   0A4B: 34         .BYTE 52
   0A4C: 58         .BYTE 88
   0A4D: 25         .BYTE 37
   0A4E: 34         .BYTE 52
   0A4F: 2E         .BYTE 46
   0A50: 34         .BYTE 52
   0A51: 58         .BYTE 88
   0A52: 25         .BYTE 37
   0A53: 34         .BYTE 52
   0A54: 2E         .BYTE 46
   0A55: 34         .BYTE 52
   0A56: 58         .BYTE 88
   0A57: 20         .BYTE 32
   0A58: 73         .BYTE 115
   0A59: 65         .BYTE 101
   0A5A: 63         .BYTE 99
   0A5B: 6F         .BYTE 111
   0A5C: 6E         .BYTE 110
   0A5D: 64         .BYTE 100
   0A5E: 73         .BYTE 115
   0A5F: 0D         .BYTE 13
   0A60: 0A         .BYTE 10
   0A61: 00         .BYTE 0
Cstr_29:
   0A62: 25         .BYTE 37
   0A63: 34         .BYTE 52
   0A64: 2E         .BYTE 46
   0A65: 34         .BYTE 52
   0A66: 58         .BYTE 88
   0A67: 3A         .BYTE 58
   0A68: 00         .BYTE 0
Cstr_30:
   0A69: 20         .BYTE 32
   0A6A: 25         .BYTE 37
   0A6B: 32         .BYTE 50
   0A6C: 2E         .BYTE 46
   0A6D: 32         .BYTE 50
   0A6E: 58         .BYTE 88
   0A6F: 00         .BYTE 0
Cstr_31:
   0A70: 20         .BYTE 32
   0A71: 2D         .BYTE 45
   0A72: 20         .BYTE 32
   0A73: 00         .BYTE 0
Cstr_32:
   0A74: 0D         .BYTE 13
   0A75: 0A         .BYTE 10
   0A76: 00         .BYTE 0
Cstr_35:
   0A77: 2D         .BYTE 45
   0A78: 3E         .BYTE 62
   0A79: 20         .BYTE 32
   0A7A: 00         .BYTE 0
Cstr_36:
   0A7B: 08         .BYTE 8
   0A7C: 08         .BYTE 8
   0A7D: 08         .BYTE 8
   0A7E: 08         .BYTE 8
   0A7F: 00         .BYTE 0
Cstr_37:
   0A80: 44         .BYTE 68
   0A81: 69         .BYTE 105
   0A82: 73         .BYTE 115
   0A83: 70         .BYTE 112
   0A84: 6C         .BYTE 108
   0A85: 61         .BYTE 97
   0A86: 79         .BYTE 121
   0A87: 20         .BYTE 32
   0A88: 00         .BYTE 0
Cstr_38:
   0A89: 0D         .BYTE 13
   0A8A: 0A         .BYTE 10
   0A8B: 00         .BYTE 0
Cstr_39:
   0A8C: 4C         .BYTE 76
   0A8D: 45         .BYTE 69
   0A8E: 44         .BYTE 68
   0A8F: 73         .BYTE 115
   0A90: 20         .BYTE 32
   0A91: 00         .BYTE 0
Cstr_41:
   0A92: 0D         .BYTE 13
   0A93: 0A         .BYTE 10
   0A94: 00         .BYTE 0
Cstr_42:
   0A95: 4D         .BYTE 77
   0A96: 65         .BYTE 101
   0A97: 6D         .BYTE 109
   0A98: 6F         .BYTE 111
   0A99: 72         .BYTE 114
   0A9A: 79         .BYTE 121
   0A9B: 20         .BYTE 32
   0A9C: 00         .BYTE 0
Cstr_43:
   0A9D: 20         .BYTE 32
   0A9E: 56         .BYTE 86
   0A9F: 61         .BYTE 97
   0AA0: 6C         .BYTE 108
   0AA1: 75         .BYTE 117
   0AA2: 65         .BYTE 101
   0AA3: 20         .BYTE 32
   0AA4: 00         .BYTE 0
Cstr_44:
   0AA5: 0D         .BYTE 13
   0AA6: 0A         .BYTE 10
   0AA7: 00         .BYTE 0
Cstr_45:
   0AA8: 44         .BYTE 68
   0AA9: 49         .BYTE 73
   0AAA: 50         .BYTE 80
   0AAB: 20         .BYTE 32
   0AAC: 73         .BYTE 115
   0AAD: 77         .BYTE 119
   0AAE: 69         .BYTE 105
   0AAF: 74         .BYTE 116
   0AB0: 63         .BYTE 99
   0AB1: 68         .BYTE 104
   0AB2: 20         .BYTE 32
   0AB3: 69         .BYTE 105
   0AB4: 73         .BYTE 115
   0AB5: 20         .BYTE 32
   0AB6: 30         .BYTE 48
   0AB7: 78         .BYTE 120
   0AB8: 25         .BYTE 37
   0AB9: 58         .BYTE 88
   0ABA: 0D         .BYTE 13
   0ABB: 0A         .BYTE 10
   0ABC: 00         .BYTE 0
Cstr_47:
   0ABD: 54         .BYTE 84
   0ABE: 65         .BYTE 101
   0ABF: 6D         .BYTE 109
   0AC0: 70         .BYTE 112
   0AC1: 65         .BYTE 101
   0AC2: 72         .BYTE 114
   0AC3: 61         .BYTE 97
   0AC4: 74         .BYTE 116
   0AC5: 75         .BYTE 117
   0AC6: 72         .BYTE 114
   0AC7: 65         .BYTE 101
   0AC8: 20         .BYTE 32
   0AC9: 69         .BYTE 105
   0ACA: 73         .BYTE 115
   0ACB: 20         .BYTE 32
   0ACC: 25         .BYTE 37
   0ACD: 64         .BYTE 100
   0ACE: 20         .BYTE 32
   0ACF: 64         .BYTE 100
   0AD0: 65         .BYTE 101
   0AD1: 67         .BYTE 103
   0AD2: 72         .BYTE 114
   0AD3: 65         .BYTE 101
   0AD4: 65         .BYTE 101
   0AD5: 73         .BYTE 115
   0AD6: 20         .BYTE 32
   0AD7: 43         .BYTE 67
   0AD8: 65         .BYTE 101
   0AD9: 6C         .BYTE 108
   0ADA: 73         .BYTE 115
   0ADB: 69         .BYTE 105
   0ADC: 75         .BYTE 117
   0ADD: 73         .BYTE 115
   0ADE: 0D         .BYTE 13
   0ADF: 0A         .BYTE 10
   0AE0: 00         .BYTE 0
Cstr_49:
   0AE1: 48         .BYTE 72
   0AE2: 61         .BYTE 97
   0AE3: 6C         .BYTE 108
   0AE4: 74         .BYTE 116
   0AE5: 65         .BYTE 101
   0AE6: 64         .BYTE 100
   0AE7: 2E         .BYTE 46
   0AE8: 0D         .BYTE 13
   0AE9: 0A         .BYTE 10
   0AEA: 00         .BYTE 0
Cstr_52:
   0AEB: 0D         .BYTE 13
   0AEC: 0A         .BYTE 10
   0AED: 43         .BYTE 67
   0AEE: 20         .BYTE 32
   0AEF: 2D         .BYTE 45
   0AF0: 20         .BYTE 32
   0AF1: 73         .BYTE 115
   0AF2: 68         .BYTE 104
   0AF3: 6F         .BYTE 111
   0AF4: 77         .BYTE 119
   0AF5: 20         .BYTE 32
   0AF6: 74         .BYTE 116
   0AF7: 69         .BYTE 105
   0AF8: 6D         .BYTE 109
   0AF9: 65         .BYTE 101
   0AFA: 0D         .BYTE 13
   0AFB: 0A         .BYTE 10
   0AFC: 44         .BYTE 68
   0AFD: 20         .BYTE 32
   0AFE: 2D         .BYTE 45
   0AFF: 20         .BYTE 32
   0B00: 64         .BYTE 100
   0B01: 69         .BYTE 105
   0B02: 73         .BYTE 115
   0B03: 70         .BYTE 112
   0B04: 6C         .BYTE 108
   0B05: 61         .BYTE 97
   0B06: 79         .BYTE 121
   0B07: 20         .BYTE 32
   0B08: 6D         .BYTE 109
   0B09: 65         .BYTE 101
   0B0A: 6D         .BYTE 109
   0B0B: 6F         .BYTE 111
   0B0C: 72         .BYTE 114
   0B0D: 79         .BYTE 121
   0B0E: 0D         .BYTE 13
   0B0F: 0A         .BYTE 10
   0B10: 45         .BYTE 69
   0B11: 20         .BYTE 32
   0B12: 2D         .BYTE 45
   0B13: 20         .BYTE 32
   0B14: 73         .BYTE 115
   0B15: 65         .BYTE 101
   0B16: 74         .BYTE 116
   0B17: 20         .BYTE 32
   0B18: 4C         .BYTE 76
   0B19: 45         .BYTE 69
   0B1A: 44         .BYTE 68
   0B1B: 73         .BYTE 115
   0B1C: 0D         .BYTE 13
   0B1D: 0A         .BYTE 10
   0B1E: 4D         .BYTE 77
   0B1F: 20         .BYTE 32
   0B20: 2D         .BYTE 45
   0B21: 20         .BYTE 32
   0B22: 6D         .BYTE 109
   0B23: 6F         .BYTE 111
   0B24: 64         .BYTE 100
   0B25: 69         .BYTE 105
   0B26: 66         .BYTE 102
   0B27: 79         .BYTE 121
   0B28: 20         .BYTE 32
   0B29: 6D         .BYTE 109
   0B2A: 65         .BYTE 101
   0B2B: 6D         .BYTE 109
   0B2C: 6F         .BYTE 111
   0B2D: 72         .BYTE 114
   0B2E: 79         .BYTE 121
   0B2F: 0D         .BYTE 13
   0B30: 0A         .BYTE 10
   0B31: 53         .BYTE 83
   0B32: 20         .BYTE 32
   0B33: 2D         .BYTE 45
   0B34: 20         .BYTE 32
   0B35: 72         .BYTE 114
   0B36: 65         .BYTE 101
   0B37: 61         .BYTE 97
   0B38: 64         .BYTE 100
   0B39: 20         .BYTE 32
   0B3A: 44         .BYTE 68
   0B3B: 49         .BYTE 73
   0B3C: 50         .BYTE 80
   0B3D: 20         .BYTE 32
   0B3E: 73         .BYTE 115
   0B3F: 77         .BYTE 119
   0B40: 69         .BYTE 105
   0B41: 74         .BYTE 116
   0B42: 63         .BYTE 99
   0B43: 68         .BYTE 104
   0B44: 0D         .BYTE 13
   0B45: 0A         .BYTE 10
   0B46: 54         .BYTE 84
   0B47: 20         .BYTE 32
   0B48: 2D         .BYTE 45
   0B49: 20         .BYTE 32
   0B4A: 72         .BYTE 114
   0B4B: 65         .BYTE 101
   0B4C: 61         .BYTE 97
   0B4D: 64         .BYTE 100
   0B4E: 20         .BYTE 32
   0B4F: 74         .BYTE 116
   0B50: 65         .BYTE 101
   0B51: 6D         .BYTE 109
   0B52: 70         .BYTE 112
   0B53: 65         .BYTE 101
   0B54: 72         .BYTE 114
   0B55: 61         .BYTE 97
   0B56: 74         .BYTE 116
   0B57: 75         .BYTE 117
   0B58: 72         .BYTE 114
   0B59: 65         .BYTE 101
   0B5A: 0D         .BYTE 13
   0B5B: 0A         .BYTE 10
   0B5C: 51         .BYTE 81
   0B5D: 20         .BYTE 32
   0B5E: 2D         .BYTE 45
   0B5F: 20         .BYTE 32
   0B60: 71         .BYTE 113
   0B61: 75         .BYTE 117
   0B62: 69         .BYTE 105
   0B63: 74         .BYTE 116
   0B64: 0D         .BYTE 13
   0B65: 0A         .BYTE 10
   0B66: 58         .BYTE 88
   0B67: 20         .BYTE 32
   0B68: 2D         .BYTE 45
   0B69: 20         .BYTE 32
   0B6A: 65         .BYTE 101
   0B6B: 78         .BYTE 120
   0B6C: 69         .BYTE 105
   0B6D: 74         .BYTE 116
   0B6E: 0D         .BYTE 13
   0B6F: 0A         .BYTE 10
   0B70: 0D         .BYTE 13
   0B71: 0A         .BYTE 10
   0B72: 00         .BYTE 0
Cend_text:
